@using OpenSourceScrumTool.Models
@using OpenSourceScrumTool.Models.ViewModels
@model OpenSourceScrumTool.Models.ViewModels.LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="container">
    <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4">
        <div class="main">
            <h3>Please Log In, or @Html.ActionLink("Sign Up", "Register")</h3>
            <div class="row">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </div>

            <div class="login-or">
                <hr class="hr-or">
                <span class="span-or">or</span>
            </div>

            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-user"></i>
                        </span>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        @Html.ActionLink("Forgot password?", "ForgotPassword", new { @class = "pull-right" })*@
                    @Html.LabelFor(m => m.Password, new {@class = "control-label"})
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="glyphicon glyphicon-lock"></i>
                        </span>
                        @Html.PasswordFor(m => m.Password, new {@class = "form-control"})
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                </div>
                <div class="checkbox pull-right">
                    @Html.CheckBoxFor(m => m.RememberMe, new { @class = "hidden" })
                    <span class="character-checkbox" onclick="toggleCheckbox()"></span>
                    <span class="label">Remember Me?</span>
                </div>
                <button type="submit" class="btn btn btn-primary">Log In </button>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function toggleCheckbox() {

        var remeber = jQuery("#RememberMe").prop("checked");

        if (remeber === false) {
            jQuery(".checkbox").addClass("show");
            jQuery("#RememberMe").prop("checked", true);
        } else {
            jQuery(".checkbox").removeClass("show");
            jQuery("#RememberMe").prop("checked", false);
        }
    }
</script>