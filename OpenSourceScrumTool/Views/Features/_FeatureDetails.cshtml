@using OpenSourceScrumTool.Extensions
@using OpenSourceScrumTool.Hubs
@model OpenSourceScrumTool.Models.ViewModels.FeatureDetailsViewModel

@{
    Layout = null;
}

<div class="panel panel-default panel-dismissable" data-panel-details="Feature">
    <div class="panel-heading">
        @Html.ActionLink("Feature", "Index", "Features", new { id = Model.ProjectId }, null)
        <button type="button" class="close" data-dismiss="panel">×</button>
        <button type="button" class="close show-btn" style="display: none;"><span class="caret"></span></button>
    </div>

    <div class="panel-body">
        <div class="col-md-7">
            <h4 data-bind="text: @Html.NameFor(m=>m.Title)"></h4>
        </div>
        <div class="col-md-1">
            <h5><strong data-bind="text: @Html.NameFor(m => m.TasksDone)"></strong> Done</h5>
        </div>
        <div class="col-md-1">
            <h5><strong data-bind="text: @Html.NameFor(m => m.TasksInProgress)"></strong> In Progress</h5>
        </div>
        <div class="col-md-1">
            <h5><strong data-bind="text: @Html.NameFor(m => m.TasksNotStarted)"></strong> Not Started</h5>
        </div>
        <div class="col-md-2">
            <h5><strong data-bind="text: @Html.NameFor(m => m.TimeRemaining)"></strong> Hour(s) Remaining</h5>
        </div>
        <div class="col-md-12">
            <p data-bind="html: @Html.NameFor(m => m.Description)"></p>
        </div>
    </div>
</div>

@* ReSharper disable once StringLiteralWrongQuotes *@
<script type="text/javascript">
    (function(window, $, undefined) {
        //Serialise model into json string
        @{
            Model.Title = HttpUtility.JavaScriptStringEncode(Model.Title);
            Model.Description = HttpUtility.JavaScriptStringEncode(Model.Description);
        }
        var modelJson = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model))';
        //Parse model to apply and start monitoring
        var obj = window.Scrum.LiveUpdate.ParseJson(modelJson);
        window.Scrum.LiveUpdate.UpdateData("@ViewModelDataType.Feature.DisplayName()", "@ActionType.Details.DisplayName()", obj);
    })(window, jQuery.noConflict());
</script>